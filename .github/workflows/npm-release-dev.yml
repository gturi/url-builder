name: npm-release-dev
on:
  schedule:
    - cron:  '00 10 * * *'

jobs:
  check-for-changes:
    runs-on: ubuntu-latest
    outputs:
      output: ${{ steps.status.outputs.value }}
    steps:
      - uses: actions/checkout@v2
        with:
          ref: develop
      - uses: actions/setup-node@v2
        with:
          node-version: '14'
      - run: npm ci
      - id: status
        # using a run statement for each command does not work
        run: |
          OUT=`node script/check-for-changes-within-24h.mjs`
          echo "$OUT build step"
          echo "::set-output name=value::$OUT"
  build:
    needs: check-for-changes
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version.outputs.value }}
    if: ${{ needs.check-for-changes.outputs.output == 'run' }}
    steps:
      - uses: actions/checkout@v2
        with:
          ref: develop
      - uses: actions/setup-node@v2
        with:
          node-version: '14'
      - run: npm ci
      - run: npm run lint
      - run: npm test
      - id: version
        run: |
          DEV_VERSION=`node script/create-develop-version.mjs`
          echo "library dev version $DEV_VERSION"
          echo "::set-output name=value::$DEV_VERSION"
  npm-registry-release:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v2
        with:
          ref: develop
      # setup to publish to npm registry
      - uses: actions/setup-node@v2
        with:
          node-version: '14'
          registry-url: 'https://registry.npmjs.org'
      - run: npm ci
      # temporary modifies package.json version (the timestamp is used to get a uuid)
      - run: npm version ${{ needs.build.outputs.version }} --no-git-tag-version
      - run: npm publish --access public --tag dev
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
